library(reticulate)
source_python("live_capture_n_extract_features_anomaly_detect.py")
getwd()
source_python("live_capture_n_extract_features_anomaly_detect.py")
final_feats_val_list
library(reticulate)
source_python("live_capture_n_extract_features_anomaly_detect.py")
# flights <- read_flights("flights.csv")
final_feats_name_list
final_feats_val_list
check = data.frame(final_feats_val_list)
View(check)
colnames(check) = final_feats_name_list
View(check)
getwd()
setwd("../")
getwd()
driver <- dbDriver("SQLite")
# library(shiny)
library(dplyr)
library(stringi)
library(randomForest)
library(plotly)
library(plotly)
library(RSQLite)
library(pool)
load("supervised_model.RData")
load("cols_keep.RData")
source("desc_normalize.R")
model_demo <- load_model_hdf5("model_demo.hdf5")
driver <- dbDriver("SQLite")
conn <- dbConnect(driver,dbname="../../../WADAC_Database/camera_db/db_sigs_bnl800_bks300.db")
getwd()
model_demo <- load_model_hdf5("model_demo.hdf5")
library(keras)
library(keras)
install.packages("keras")
library(keras)
install_keras()
library(keras)
devtools::install_github("rstudio/keras")
library(keras)
shiny::runApp()
runApp()
system("killall python")
install.packages("h5py")
install.packages("h5")
shiny::runApp()
